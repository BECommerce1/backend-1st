[{"/Users/lee/Documents/GitHub/backend-1st/src/main/frontend/src/index.js":"1","/Users/lee/Documents/GitHub/backend-1st/src/main/frontend/src/components/ListPage.js":"2","/Users/lee/Documents/GitHub/backend-1st/src/main/frontend/src/components/PostDetailPage.js":"3","/Users/lee/Documents/GitHub/backend-1st/src/main/frontend/src/components/LoginPage.js":"4","/Users/lee/Documents/GitHub/backend-1st/src/main/frontend/src/components/CreatePostPage.js":"5","/Users/lee/Documents/GitHub/backend-1st/src/main/frontend/src/components/CustomButton.js":"6","/Users/lee/Documents/GitHub/backend-1st/src/main/frontend/src/components/StyledTextArea.js":"7"},{"size":828,"mtime":1692198323000,"results":"8","hashOfConfig":"9"},{"size":3488,"mtime":1692198323000,"results":"10","hashOfConfig":"9"},{"size":7962,"mtime":1692278233959,"results":"11","hashOfConfig":"9"},{"size":1706,"mtime":1692198323000,"results":"12","hashOfConfig":"9"},{"size":1883,"mtime":1692198323000,"results":"13","hashOfConfig":"9"},{"size":1088,"mtime":1692198323000,"results":"14","hashOfConfig":"9"},{"size":977,"mtime":1692198323000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"qkqzpl",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/Users/lee/Documents/GitHub/backend-1st/src/main/frontend/src/index.js",[],[],[],"/Users/lee/Documents/GitHub/backend-1st/src/main/frontend/src/components/ListPage.js",["39"],[],"import React, {useEffect, useState} from 'react';\nimport {blue, CustomButton} from './CustomButton';\nimport {useNavigate} from 'react-router-dom';\nimport {red} from '@mui/material/colors';\nimport {Table, TableBody, TableCell, TableHead, TableRow, TextField} from '@mui/material';\n\nconst ListPage = () => {\n  const navigate = useNavigate();\n  const [keyword, setKeyword] = useState('');\n  const [posts, setPosts] = useState([\n    {\n      id: 1,\n      title: '게시물 제목1',\n      content: '게시물 내용1',\n      author: '작성자',\n      created_at: '작성일시'\n    },\n    {\n      id: 2,\n      title: '게시물 제목2',\n      content: '게시물 내용2',\n      author: '작성자',\n      created_at: '작성일시'\n    }\n  ]);\n\n  useEffect(() => {\n    async function fetchData() {\n      await fetch('http://localhost:8080/api/posts')\n      .then(res => res.json()).then(res => setPosts([...res.posts]))\n      .catch((err) => console.error(err));\n    }\n\n    fetchData();\n  }, []);\n\n  const logoutHandler = async () => {\n    const email = localStorage.getItem('email');\n    if (!email) {\n      navigate('/login');\n      return;\n    }\n    await fetch(`http://localhost:8080/api/logout`, {\n      method: 'POST',\n      body: JSON.stringify({\n        email\n      })\n    }).then(res => res.json()).then(() => {\n      navigate('/login');\n    }).catch((error) => console.error(error));\n    ;\n  };\n\n  const searchHandler = async (email) => {\n    if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email)) return;\n    const { posts } = await fetch(`http://localhost:8080/api/posts/search?author_email=${email}`).then(res => res.json()).catch((error) => {\n      console.error(error);\n    });\n    if (!posts) return;\n    setPosts([...posts]);\n  };\n\n\n  return (\n    <div style={{\n      padding: '40px'\n    }}>\n      <h1>게시판 리스트</h1>\n      <div>\n        <TextField id=\"standard-required\" label=\"작성자 이메일 검색\" variant=\"standard\" value={keyword}\n                   onChange={(event) => setKeyword(event.target.value)}/>\n        <CustomButton style={{ backgroundColor: blue[500] }} onClick={() => searchHandler(keyword)}>검색</CustomButton>\n      </div>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>이름</TableCell>\n            <TableCell>게시물내용</TableCell>\n            <TableCell>작성자</TableCell>\n            <TableCell>작성일시</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {posts.map(post => (\n            <TableRow\n              key={post.id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              onClick={() => {\n                localStorage.setItem('post', JSON.stringify({ ...post}))\n                navigate(`/post/${post.id}`)\n              }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {post.title}\n              </TableCell>\n              <TableCell>{post.content}</TableCell>\n              <TableCell>{post.author}</TableCell>\n              <TableCell>{post.created_at}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <CustomButton style={{ backgroundColor: blue[500] }} onClick={() => navigate('/post/create')}>게시글 작성</CustomButton>\n      <CustomButton style={{ backgroundColor: red[500] }} onClick={logoutHandler}>로그아웃</CustomButton>\n    </div>\n  );\n};\n\nexport default ListPage;\n","/Users/lee/Documents/GitHub/backend-1st/src/main/frontend/src/components/PostDetailPage.js",["40","41","42","43","44","45"],[],"/Users/lee/Documents/GitHub/backend-1st/src/main/frontend/src/components/LoginPage.js",[],[],"/Users/lee/Documents/GitHub/backend-1st/src/main/frontend/src/components/CreatePostPage.js",[],[],"/Users/lee/Documents/GitHub/backend-1st/src/main/frontend/src/components/CustomButton.js",[],[],"/Users/lee/Documents/GitHub/backend-1st/src/main/frontend/src/components/StyledTextArea.js",[],[],{"ruleId":"46","severity":1,"message":"47","line":55,"column":16,"nodeType":"48","messageId":"49","endLine":55,"endColumn":17,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":32,"column":10,"nodeType":"53","messageId":"54","endLine":32,"endColumn":14},{"ruleId":"51","severity":1,"message":"55","line":32,"column":16,"nodeType":"53","messageId":"54","endLine":32,"endColumn":23},{"ruleId":"56","severity":1,"message":"57","line":66,"column":6,"nodeType":"58","endLine":66,"endColumn":8,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":91,"column":17,"nodeType":"62","messageId":"63","endLine":91,"endColumn":19},{"ruleId":"51","severity":1,"message":"64","line":153,"column":9,"nodeType":"53","messageId":"54","endLine":153,"endColumn":14},{"ruleId":"60","severity":1,"message":"61","line":160,"column":10,"nodeType":"62","messageId":"63","endLine":160,"endColumn":12},"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["65","66"],"no-unused-vars","'like' is assigned a value but never used.","Identifier","unusedVar","'setLike' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["67"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'likes' is assigned a value but never used.",{"messageId":"68","fix":"69","desc":"70"},{"messageId":"71","fix":"72","desc":"73"},{"desc":"74","fix":"75"},"removeEscape",{"range":"76","text":"77"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"78","text":"79"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [fetchData]",{"range":"80","text":"81"},[1394,1395],"",[1394,1394],"\\",[1669,1671],"[fetchData]"]