{"ast":null,"code":"var _jsxFileName = \"/Users/a/hyuna/Development/SuperCoding/backend-1st/src/main/frontend/src/components/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { blue, CustomButton } from './CustomButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loginState, setLoginState] = useState({\n    email: '',\n    password: ''\n  });\n  const loginHandler = async (path, email, password) => {\n    await fetch(`http://localhost:8080${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => res.json()).then(data => {\n      if (path === '/api/login') {\n        console.log(data);\n\n        // 헤더 전체를 순회\n        for (let [key, value] of data.headers) {\n          console.log(`${key} = ${value}`);\n        }\n        localStorage.setItem('email', data.email);\n        localStorage.setItem('X-AUTH-TOKEN', data.headers.get('X-AUTH-TOKEN'));\n        console.log(data.headers.get('X-AUTH-TOKEN'));\n        navigate('/');\n      } else if (path === '/api/signup') {\n        console.log(data);\n        navigate('/');\n      }\n    }).catch(error => console.error(error));\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '40px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB85C\\uADF8\\uC778 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC774\\uBA54\\uC77C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n      variant: \"outlined\",\n      onChange: event => setLoginState(prev => ({\n        ...prev,\n        email: event.target.value\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n      variant: \"outlined\",\n      onChange: event => setLoginState(prev => ({\n        ...prev,\n        password: event.target.value\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n        style: {\n          backgroundColor: blue[900]\n        },\n        onClick: () => loginHandler('/api/signup', loginState.email, loginState.password),\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        style: {\n          backgroundColor: blue[500]\n        },\n        onClick: () => loginHandler('/api/login', loginState.email, loginState.password),\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"haLQjFmipVQlD1JulQaM4ByeMeY=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","TextField","useNavigate","blue","CustomButton","jsxDEV","_jsxDEV","LoginPage","_s","navigate","loginState","setLoginState","email","password","loginHandler","path","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","key","value","localStorage","setItem","get","catch","error","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","id","label","variant","onChange","event","prev","target","marginTop","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["/Users/a/hyuna/Development/SuperCoding/backend-1st/src/main/frontend/src/components/LoginPage.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {TextField} from '@mui/material';\nimport {useNavigate} from 'react-router-dom';\nimport {blue, CustomButton} from './CustomButton';\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n  const [loginState, setLoginState] = useState({\n    email: '',\n    password: '',\n  });\n  const loginHandler = async (path ,email, password) => {\n    await fetch(`http://localhost:8080${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type' : 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      }),\n    }).then(res => res.json()).then((data) => {\n      if(path === '/api/login') {\n        console.log(data)\n\n        // 헤더 전체를 순회\n        for (let [key, value] of data.headers) {\n          console.log(`${key} = ${value}`);\n        }\n\n        localStorage.setItem('email', data.email);\n        localStorage.setItem('X-AUTH-TOKEN', data.headers.get('X-AUTH-TOKEN'))\n        console.log(data.headers.get('X-AUTH-TOKEN'))\n        navigate('/')\n      }\n      else if (path === '/api/signup') {\n        console.log(data)\n        navigate('/')\n      }\n\n    }).catch((error) => console.error(error));;\n  }\n  return (\n    <div style={{\n      padding: '40px'\n    }}>\n      <h1>로그인 페이지</h1>\n      <h2>이메일</h2>\n      <TextField id=\"outlined-basic\" label=\"이메일을 입력해주세요.\" variant=\"outlined\" onChange={(event) => setLoginState(prev => ({...prev, email: event.target.value}))}/>\n      <h2>비밀번호</h2>\n      <TextField id=\"outlined-basic\" label=\"비밀번호를 입력해주세요.\" variant=\"outlined\" onChange={(event) => setLoginState(prev => ({...prev, password: event.target.value}))}/>\n      <div style={{\n        marginTop: '20px'\n      }}>\n        <CustomButton style={{ backgroundColor: blue[900] }} onClick={() => loginHandler('/api/signup', loginState.email, loginState.password)}>회원가입</CustomButton>\n        <CustomButton style={{ backgroundColor: blue[500] }} onClick={() => loginHandler('/api/login', loginState.email, loginState.password)}>로그인</CustomButton>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}