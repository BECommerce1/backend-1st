{"ast":null,"code":"var _jsxFileName = \"/Users/a/hyuna/Development/SuperCoding/backend-1st/src/main/frontend/src/components/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { blue, CustomButton } from './CustomButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loginState, setLoginState] = useState({\n    email: '',\n    password: ''\n  });\n  const loginHandler = async (path, email, password) => {\n    try {\n      const response = await fetch(`http://localhost:8080${path}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      }).then().catch(error => alert(error));\n      const data = response.json();\n      if (path === '/api/login') {\n        alert(response.statusMessage);\n        if (response.status != 200) {\n          return;\n        }\n        console.log('login : ' + data.email);\n        localStorage.setItem('email', data.email);\n\n        // 23.08.17 hyuna token 저장..\n        console.log('login Token : ' + response.headers.get('X-AUTH-TOKEN'));\n        localStorage.setItem('X-AUTH-TOKEN', response.headers.get('X-AUTH-TOKEN'));\n        navigate('/');\n      } else if (path === '/api/signup') {\n        console.log('signup : ' + data);\n        navigate('/');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // const loginHandler = async (path ,email, password) => {\n  //   await fetch(`http://localhost:8080${path}`, {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type' : 'application/json'\n  //     },\n  //     body: JSON.stringify({\n  //       email,\n  //       password\n  //     }),\n  //   }).then(res => res.json()).then((data) => {\n  //     if(path === '/api/login') {\n  //       console.log(data)\n  //       localStorage.setItem('email', data.email);\n  //\n  //       navigate('/')\n  //     }\n  //     else if (path === '/api/signup') {\n  //       console.log(data)\n  //       navigate('/')\n  //     }\n  //\n  //   }).catch((error) => console.error(error));;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '40px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB85C\\uADF8\\uC778 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC774\\uBA54\\uC77C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n      variant: \"outlined\",\n      onChange: event => setLoginState(prev => ({\n        ...prev,\n        email: event.target.value\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n      variant: \"outlined\",\n      onChange: event => setLoginState(prev => ({\n        ...prev,\n        password: event.target.value\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n        style: {\n          backgroundColor: blue[900]\n        },\n        onClick: () => loginHandler('/api/signup', loginState.email, loginState.password),\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        style: {\n          backgroundColor: blue[500]\n        },\n        onClick: () => loginHandler('/api/login', loginState.email, loginState.password),\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"haLQjFmipVQlD1JulQaM4ByeMeY=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","TextField","useNavigate","blue","CustomButton","jsxDEV","_jsxDEV","LoginPage","_s","navigate","loginState","setLoginState","email","password","loginHandler","path","response","fetch","method","headers","body","JSON","stringify","then","catch","error","alert","data","json","statusMessage","status","console","log","localStorage","setItem","get","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","id","label","variant","onChange","event","prev","target","value","marginTop","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["/Users/a/hyuna/Development/SuperCoding/backend-1st/src/main/frontend/src/components/LoginPage.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {TextField} from '@mui/material';\nimport {useNavigate} from 'react-router-dom';\nimport {blue, CustomButton} from './CustomButton';\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n  const [loginState, setLoginState] = useState({\n    email: '',\n    password: '',\n  });\n\n  const loginHandler = async (path ,email, password) => {\n    try {\n      const response= await fetch(`http://localhost:8080${path}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type' : 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        }),\n      }).then().catch((error) => alert(error))\n\n      const data = response.json();\n\n      if (path === '/api/login') {\n        alert(response.statusMessage)\n        if (response.status != 200) {\n          return;\n        }\n\n        console.log('login : ' + data.email)\n        localStorage.setItem('email', data.email);\n\n        // 23.08.17 hyuna token 저장..\n        console.log('login Token : ' + response.headers.get('X-AUTH-TOKEN'));\n        localStorage.setItem('X-AUTH-TOKEN', response.headers.get('X-AUTH-TOKEN'));\n\n        navigate('/')\n      }\n      else if (path === '/api/signup') {\n        console.log('signup : ' + data)\n        navigate('/')\n      }\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n\n  // const loginHandler = async (path ,email, password) => {\n  //   await fetch(`http://localhost:8080${path}`, {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type' : 'application/json'\n  //     },\n  //     body: JSON.stringify({\n  //       email,\n  //       password\n  //     }),\n  //   }).then(res => res.json()).then((data) => {\n  //     if(path === '/api/login') {\n  //       console.log(data)\n  //       localStorage.setItem('email', data.email);\n  //\n  //       navigate('/')\n  //     }\n  //     else if (path === '/api/signup') {\n  //       console.log(data)\n  //       navigate('/')\n  //     }\n  //\n  //   }).catch((error) => console.error(error));;\n  // }\n\n  return (\n    <div style={{\n      padding: '40px'\n    }}>\n      <h1>로그인 페이지</h1>\n      <h2>이메일</h2>\n      <TextField id=\"outlined-basic\" label=\"이메일을 입력해주세요.\" variant=\"outlined\" onChange={(event) => setLoginState(prev => ({...prev, email: event.target.value}))}/>\n      <h2>비밀번호</h2>\n      <TextField id=\"outlined-basic\" label=\"비밀번호를 입력해주세요.\" variant=\"outlined\" onChange={(event) => setLoginState(prev => ({...prev, password: event.target.value}))}/>\n      <div style={{\n        marginTop: '20px'\n      }}>\n        <CustomButton style={{ backgroundColor: blue[900] }} onClick={() => loginHandler('/api/signup', loginState.email, loginState.password)}>회원가입</CustomButton>\n        <CustomButton style={{ backgroundColor: blue[500] }} onClick={() => loginHandler('/api/login', loginState.email, loginState.password)}>로그인</CustomButton>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}